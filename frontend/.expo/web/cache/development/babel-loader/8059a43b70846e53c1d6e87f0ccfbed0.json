{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from \"axios\";\nimport * as SecureStore from \"expo-secure-store\";\n\nfunction getValueFor(key) {\n  var result;\n  return _regeneratorRuntime.async(function getValueFor$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(SecureStore.getItemAsync(key));\n\n        case 2:\n          result = _context.sent;\n\n          if (!result) {\n            _context.next = 7;\n            break;\n          }\n\n          return _context.abrupt(\"return\", result);\n\n        case 7:\n          return _context.abrupt(\"return\", null);\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nvar baseUrl = \"http://10.103.88.29:3000/\";\nexport var login = function login(email, password) {\n  return axios.post(baseUrl + \"users/login\", {\n    email: email,\n    password: password\n  });\n};\nexport var register = function register(email, password, firstName, lastName) {\n  console.log(\"input\", [email, password, firstName, lastName]);\n  return axios.post(baseUrl + \"users/create\", {\n    email: email,\n    password: password,\n    firstName: firstName,\n    lastName: lastName\n  });\n};\nexport var searchUser = function searchUser(input) {\n  return axios.get(baseUrl + \"users/search?input=\" + input);\n};\nexport var addFriend = function addFriend(id) {\n  getValueFor(\"authToken\").then(function (res) {\n    console.log(\"response\", res);\n    axios({\n      url: baseUrl + \"users/addFriend\",\n      method: \"POST\",\n      headers: {\n        Auth: \"\" + res\n      },\n      data: {\n        friendId: id\n      }\n    }).then(function (response) {\n      console.log(response.status);\n    }).catch(function (err) {\n      console.log(err);\n    });\n  });\n};\nexport var getFriends = function getFriends(token) {\n  return axios({\n    url: baseUrl + \"users/getFriends\",\n    method: \"GET\",\n    headers: {\n      Auth: \"\" + token\n    }\n  });\n};\nexport var setUserLocation = function setUserLocation(token, longitude, latitude) {\n  return axios({\n    url: baseUrl + \"location/set\",\n    method: \"POST\",\n    data: {\n      longitude: longitude,\n      latitude: latitude\n    },\n    headers: {\n      Auth: \"\" + token\n    }\n  });\n};\nexport var getNearbyFriends = function getNearbyFriends(token) {\n  return axios({\n    url: baseUrl + \"location/getFriendsNearby/\",\n    method: \"GET\",\n    headers: {\n      Auth: \"\" + token\n    }\n  });\n};\nexport var sendMessage = function sendMessage(token, friendId, message) {\n  return axios({\n    url: baseUrl + \"chat/sendMsg\",\n    method: \"POST\",\n    headers: {\n      Auth: \"\" + token\n    },\n    data: {\n      friendId: friendId,\n      msg: message\n    }\n  });\n};\nexport var getChatMessages = function getChatMessages(token, friendId) {\n  return axios({\n    url: baseUrl + \"chat/getChat\",\n    method: \"GET\",\n    headers: {\n      Auth: \"\" + token,\n      friendId: friendId\n    }\n  });\n};","map":{"version":3,"sources":["/Users/mutabazi3/Projects/cis400/frontend/api.tsx"],"names":["axios","SecureStore","getValueFor","key","getItemAsync","result","baseUrl","login","email","password","post","register","firstName","lastName","console","log","searchUser","input","get","addFriend","id","then","res","url","method","headers","Auth","data","friendId","response","status","catch","err","getFriends","token","setUserLocation","longitude","latitude","getNearbyFriends","sendMessage","message","msg","getChatMessages"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport * as SecureStore from \"expo-secure-store\";\n\nasync function getValueFor(key: string) {\n  let result = await SecureStore.getItemAsync(key);\n  if (result) {\n    // alert(\"🔐 Here's your value 🔐 \\n\" + result);\n    return result;\n  } else {\n    return null;\n  }\n}\n\nconst baseUrl = \"http://10.103.88.29:3000/\";\n//Login\nexport const login = (email: String, password: String) => {\n  return axios.post(`${baseUrl}users/login`, {\n    email: email,\n    password: password,\n  });\n};\n\nexport const register = (\n  email: String,\n  password: String,\n  firstName: String,\n  lastName: String\n) => {\n  console.log(\"input\", [email, password, firstName, lastName]);\n  return axios.post(`${baseUrl}users/create`, {\n    email: email,\n    password: password,\n    firstName: firstName,\n    lastName: lastName,\n  });\n};\n\nexport const searchUser = (input: String) => {\n  return axios.get(`${baseUrl}users/search?input=${input}`);\n};\n\n//Handles the friend addition.\nexport const addFriend = (id: string) => {\n  getValueFor(\"authToken\").then((res) => {\n    console.log(\"response\", res);\n    axios({\n      url: `${baseUrl}users/addFriend`,\n      method: \"POST\",\n      headers: { Auth: `${res}` },\n      data: {\n        friendId: id,\n      },\n    })\n      .then((response) => {\n        console.log(response.status);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  });\n};\n\nexport const getFriends = (token: string) => {\n  return axios({\n    url: `${baseUrl}users/getFriends`,\n    method: \"GET\",\n    headers: { Auth: `${token}` },\n  });\n};\n\nexport const setUserLocation = (\n  token: string,\n  longitude: string,\n  latitude: string\n) => {\n  return axios({\n    url: `${baseUrl}location/set`,\n    method: \"POST\",\n    data: { longitude: longitude, latitude: latitude },\n    headers: { Auth: `${token}` },\n  });\n};\n\nexport const getNearbyFriends = (token: string) => {\n  return axios({\n    url: `${baseUrl}location/getFriendsNearby/`,\n    method: \"GET\",\n    headers: { Auth: `${token}` },\n  });\n};\n\nexport const sendMessage = (\n  token: string,\n  friendId: string,\n  message: string\n) => {\n  return axios({\n    url: `${baseUrl}chat/sendMsg`,\n    method: \"POST\",\n    headers: { Auth: `${token}` },\n    data: {\n      friendId: friendId,\n      msg: message,\n    },\n  });\n};\n\nexport const getChatMessages = (token: string, friendId: string) => {\n  return axios({\n    url: `${baseUrl}chat/getChat`,\n    method: \"GET\",\n    headers: { Auth: `${token}`, friendId: friendId },\n  });\n};\n"]},"metadata":{},"sourceType":"module"}