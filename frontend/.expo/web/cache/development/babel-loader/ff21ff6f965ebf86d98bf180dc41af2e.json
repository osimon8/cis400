{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport FriendScreen from \"./FriendsScreen\";\nimport { FontAwesome5 } from \"@expo/vector-icons\";\nimport { FontAwesome } from \"@expo/vector-icons\";\nimport { Entypo } from \"@expo/vector-icons\";\nimport MessagesScreen from \"./MessagesScreen\";\nimport { getFriends } from \"../api\";\nimport { UserContext } from \"../Context\";\nimport MyBuddies from \"./MyBuddies\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nexport default function TabScreen(_ref) {\n  var handleLogoutCallBack = _ref.handleLogoutCallBack;\n  var authToken = useContext(UserContext);\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      friends = _useState2[0],\n      setFriends = _useState2[1];\n\n  useEffect(function () {\n    getFriends(authToken).then(function (response) {\n      setFriends(response.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }, []);\n  return _jsxs(Tab.Navigator, {\n    children: [_jsx(Tab.Screen, {\n      name: \"MyBuddies\",\n      options: {\n        tabBarIcon: function tabBarIcon() {\n          return _jsx(FontAwesome, {\n            name: \"map\",\n            size: 24,\n            color: \"black\"\n          });\n        }\n      },\n      children: function children(props) {\n        return _jsx(MyBuddies, {\n          handleLogoutCallback: handleLogoutCallBack\n        });\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Friends\",\n      options: {\n        tabBarIcon: function tabBarIcon() {\n          return _jsx(FontAwesome5, {\n            name: \"user-friends\",\n            size: 24,\n            color: \"black\"\n          });\n        }\n      },\n      children: function children(props) {\n        return _jsx(FriendScreen, _objectSpread(_objectSpread({}, props), {}, {\n          friends: friends\n        }));\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Messages\",\n      component: MessagesScreen,\n      options: {\n        tabBarIcon: function tabBarIcon() {\n          return _jsx(Entypo, {\n            name: \"message\",\n            size: 24,\n            color: \"black\"\n          });\n        }\n      }\n    })]\n  });\n}","map":{"version":3,"sources":["/Users/mutabazi3/Projects/cis400/frontend/screens/HomeScreen.tsx"],"names":["React","useState","useEffect","useContext","createBottomTabNavigator","FriendScreen","FontAwesome5","FontAwesome","Entypo","MessagesScreen","getFriends","UserContext","MyBuddies","Tab","TabScreen","handleLogoutCallBack","authToken","friends","setFriends","then","response","data","catch","error","console","log","tabBarIcon","props"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AAGA,OAAOC,YAAP;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,OAAOC,cAAP;AAEA,SAASC,UAAT;AACA,SAASC,WAAT;AACA,OAAOC,SAAP;;;AAEA,IAAMC,GAAG,GAAGT,wBAAwB,EAApC;AAEA,eAAe,SAASU,SAAT,OAA6C;AAAA,MAAxBC,oBAAwB,QAAxBA,oBAAwB;AAE1D,MAAMC,SAAS,GAAGb,UAAU,CAACQ,WAAD,CAA5B;;AACA,kBAA8BV,QAAQ,CAAC,EAAD,CAAtC;AAAA;AAAA,MAAOgB,OAAP;AAAA,MAAgBC,UAAhB;;AACAhB,EAAAA,SAAS,CAAC,YAAM;AACdQ,IAAAA,UAAU,CAACM,SAAD,CAAV,CACGG,IADH,CACQ,UAACC,QAAD,EAAc;AAClBF,MAAAA,UAAU,CAACE,QAAQ,CAACC,IAAV,CAAV;AACD,KAHH,EAIGC,KAJH,CAIS,UAACC,KAAD,EAAW;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KANH;AAOD,GARQ,EAQN,EARM,CAAT;AASA,SACE,MAAC,GAAD,CAAK,SAAL;AAAA,eACE,KAAC,GAAD,CAAK,MAAL;AACE,MAAA,IAAI,EAAC,WADP;AAEE,MAAA,OAAO,EAAE;AACPG,QAAAA,UAAU,EAAE;AAAA,iBAAM,KAAC,WAAD;AAAa,YAAA,IAAI,EAAC,KAAlB;AAAwB,YAAA,IAAI,EAAE,EAA9B;AAAkC,YAAA,KAAK,EAAC;AAAxC,YAAN;AAAA;AADL,OAFX;AAAA,gBAMG,kBAACC,KAAD;AAAA,eAAW,KAAC,SAAD;AAAW,UAAA,oBAAoB,EAAEZ;AAAjC,UAAX;AAAA;AANH,MADF,EASE,KAAC,GAAD,CAAK,MAAL;AACE,MAAA,IAAI,EAAC,SADP;AAEE,MAAA,OAAO,EAAE;AACPW,QAAAA,UAAU,EAAE;AAAA,iBACV,KAAC,YAAD;AAAc,YAAA,IAAI,EAAC,cAAnB;AAAkC,YAAA,IAAI,EAAE,EAAxC;AAA4C,YAAA,KAAK,EAAC;AAAlD,YADU;AAAA;AADL,OAFX;AAAA,gBAQG,kBAACC,KAAD;AAAA,eAAW,KAAC,YAAD,kCAAkBA,KAAlB;AAAyB,UAAA,OAAO,EAAEV;AAAlC,WAAX;AAAA;AARH,MATF,EAmBE,KAAC,GAAD,CAAK,MAAL;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,SAAS,EAAER,cAFb;AAGE,MAAA,OAAO,EAAE;AACPiB,QAAAA,UAAU,EAAE;AAAA,iBAAM,KAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,SAAb;AAAuB,YAAA,IAAI,EAAE,EAA7B;AAAiC,YAAA,KAAK,EAAC;AAAvC,YAAN;AAAA;AADL;AAHX,MAnBF;AAAA,IADF;AA6BD","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport App from \"./MapScreen\";\nimport LocationScreen from \"./LocationScreen\";\nimport FriendScreen from \"./FriendsScreen\";\nimport { FontAwesome5 } from \"@expo/vector-icons\";\nimport { FontAwesome } from \"@expo/vector-icons\";\nimport { Entypo } from \"@expo/vector-icons\";\nimport MessagesScreen from \"./MessagesScreen\";\nimport * as SecureStore from \"expo-secure-store\";\nimport { getFriends } from \"../api\";\nimport { UserContext } from \"../Context\";\nimport MyBuddies from \"./MyBuddies\";\n\nconst Tab = createBottomTabNavigator();\n\nexport default function TabScreen({ handleLogoutCallBack }) {\n  //retrieve the authToken from the context\n  const authToken = useContext(UserContext);\n  const [friends, setFriends] = useState([]);\n  useEffect(() => {\n    getFriends(authToken)\n      .then((response) => {\n        setFriends(response.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n  return (\n    <Tab.Navigator>\n      <Tab.Screen\n        name=\"MyBuddies\"\n        options={{\n          tabBarIcon: () => <FontAwesome name=\"map\" size={24} color=\"black\" />,\n        }}\n      >\n        {(props) => <MyBuddies handleLogoutCallback={handleLogoutCallBack} />}\n      </Tab.Screen>\n      <Tab.Screen\n        name=\"Friends\"\n        options={{\n          tabBarIcon: () => (\n            <FontAwesome5 name=\"user-friends\" size={24} color=\"black\" />\n          ),\n        }}\n      >\n        {(props) => <FriendScreen {...props} friends={friends} />}\n      </Tab.Screen>\n      <Tab.Screen\n        name=\"Messages\"\n        component={MessagesScreen}\n        options={{\n          tabBarIcon: () => <Entypo name=\"message\" size={24} color=\"black\" />,\n        }}\n      />\n    </Tab.Navigator>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}