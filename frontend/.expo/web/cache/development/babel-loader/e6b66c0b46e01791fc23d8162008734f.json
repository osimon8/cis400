{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport AppHeader from \"../components/Header\";\nimport { useRoute } from \"@react-navigation/native\";\nimport { UserContext } from \"../Context\";\nimport { getChatMessages, sendMessage } from \"../api\";\nimport Bubble from \"../components/Bubble\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function MessageScreen(_ref) {\n  var navigation = _ref.navigation;\n  var authToken = useContext(UserContext);\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      messages = _useState2[0],\n      setMessages = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      message = _useState4[0],\n      setMessage = _useState4[1];\n\n  var route = useRoute();\n\n  var goBack = function goBack() {\n    navigation.goBack();\n  };\n\n  var FlatListBasics = function FlatListBasics() {\n    return _jsx(View, {\n      children: _jsx(FlatList, {\n        scrollEnabled: true,\n        data: messages,\n        renderItem: function renderItem(_ref2) {\n          var item = _ref2.item;\n          return _jsx(View, {\n            style: {\n              marginRight: 5,\n              width: \"75%\",\n              alignSelf: item.userId === route.params.friendId ? \"flex-start\" : \"flex-end\"\n            },\n            children: _jsx(Bubble, {\n              text: item.text,\n              border: item.userId === route.params.friendId\n            })\n          });\n        }\n      })\n    });\n  };\n\n  useEffect(function () {\n    getChatMessages(authToken, route.params.friendId, 0).then(function (result) {\n      setMessages(result.data);\n      console.log(result.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }, []);\n\n  var handleSendingMessage = function handleSendingMessage() {\n    if (message.match(/(?!^ +$)^.+$/)) {\n      var trimmedMessage = message.trim();\n      sendMessage(authToken, route.params.friendId, trimmedMessage).then(function (response) {\n        console.log(\"testing chating\", response);\n      }).catch(function (err) {\n        console.log(err);\n      });\n    }\n  };\n\n  return _jsxs(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    children: [_jsx(AppHeader, {\n      ret: goBack,\n      header: route.params.firstName + \" \" + route.params.lastName\n    }), _jsx(KeyboardAvoidingView, {\n      behavior: Platform.OS === \"ios\" ? \"padding\" : \"height\",\n      style: styles.container,\n      children: _jsx(View, {\n        style: {\n          marginBottom: 10,\n          flex: 1\n        },\n        children: _jsx(TouchableWithoutFeedback, {\n          onPress: Keyboard.dismiss,\n          children: _jsxs(View, {\n            style: styles.inner,\n            children: [_jsx(View, {\n              style: {\n                flex: 1\n              },\n              children: FlatListBasics()\n            }), _jsxs(View, {\n              style: {\n                marginTop: 10,\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                borderWidth: 1,\n                borderColor: \"#DDDDDD\",\n                borderRadius: 40,\n                paddingLeft: 15,\n                paddingRight: 15\n              },\n              children: [_jsx(View, {\n                style: {\n                  flex: 2.25\n                },\n                children: _jsx(TextInput, {\n                  value: message,\n                  style: styles.input,\n                  placeholder: \"useless placeholder\",\n                  onChangeText: function onChangeText(e) {\n                    setMessage(e);\n                  }\n                })\n              }), _jsx(View, {\n                style: {\n                  flex: 0.75\n                },\n                children: _jsx(Button, {\n                  title: \"send\",\n                  onPress: handleSendingMessage\n                })\n              })]\n            })]\n          })\n        })\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  inner: {\n    marginLeft: 10,\n    marginRight: 10,\n    padding: 10,\n    flex: 1,\n    justifyContent: \"flex-end\"\n  },\n  input: {\n    height: 30,\n    width: \"80%\",\n    padding: 10\n  },\n  btnContainer: {\n    backgroundColor: \"white\",\n    marginTop: 12\n  }\n});","map":{"version":3,"sources":["/Users/mutabazi3/Projects/cis400/frontend/screens/MessageScreen.tsx"],"names":["React","useState","useEffect","useContext","AppHeader","useRoute","UserContext","getChatMessages","sendMessage","Bubble","MessageScreen","navigation","authToken","messages","setMessages","message","setMessage","route","goBack","FlatListBasics","item","marginRight","width","alignSelf","userId","params","friendId","text","then","result","data","console","log","catch","error","handleSendingMessage","match","trimmedMessage","trim","response","err","flex","firstName","lastName","Platform","OS","styles","container","marginBottom","Keyboard","dismiss","inner","marginTop","flexDirection","alignItems","borderWidth","borderColor","borderRadius","paddingLeft","paddingRight","input","e","StyleSheet","create","marginLeft","padding","justifyContent","height","btnContainer","backgroundColor"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;;;;;;;;;;;AAeA,OAAOC,SAAP;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,SAASC,WAAT;AACA,SAASC,eAAT,EAA0BC,WAA1B;AACA,OAAOC,MAAP;;;AAEA,eAAe,SAASC,aAAT,OAA4D;AAAA,MAAnCC,UAAmC,QAAnCA,UAAmC;AACzE,MAAMC,SAAS,GAAGT,UAAU,CAACG,WAAD,CAA5B;;AACA,kBAAgCL,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOY,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAA8Bb,QAAQ,CAAC,EAAD,CAAtC;AAAA;AAAA,MAAOc,OAAP;AAAA,MAAgBC,UAAhB;;AACA,MAAMC,KAAK,GAAGZ,QAAQ,EAAtB;;AAEA,MAAMa,MAAM,GAAG,SAATA,MAAS,GAAM;AACnBP,IAAAA,UAAU,CAACO,MAAX;AACD,GAFD;;AAIA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,WACE,KAAC,IAAD;AAAA,gBACE,KAAC,QAAD;AACE,QAAA,aAAa,MADf;AAEE,QAAA,IAAI,EAAEN,QAFR;AAGE,QAAA,UAAU,EAAE;AAAA,cAAGO,IAAH,SAAGA,IAAH;AAAA,iBACV,KAAC,IAAD;AACE,YAAA,KAAK,EAAE;AACLC,cAAAA,WAAW,EAAE,CADR;AAELC,cAAAA,KAAK,EAAE,KAFF;AAGLC,cAAAA,SAAS,EACPH,IAAI,CAACI,MAAL,KAAgBP,KAAK,CAACQ,MAAN,CAAaC,QAA7B,GACI,YADJ,GAEI;AAND,aADT;AAAA,sBAUE,KAAC,MAAD;AACE,cAAA,IAAI,EAAEN,IAAI,CAACO,IADb;AAEE,cAAA,MAAM,EAAEP,IAAI,CAACI,MAAL,KAAgBP,KAAK,CAACQ,MAAN,CAAaC;AAFvC;AAVF,YADU;AAAA;AAHd;AADF,MADF;AAyBD,GA1BD;;AA4BAxB,EAAAA,SAAS,CAAC,YAAM;AACdK,IAAAA,eAAe,CAACK,SAAD,EAAYK,KAAK,CAACQ,MAAN,CAAaC,QAAzB,EAAmC,CAAnC,CAAf,CACGE,IADH,CACQ,UAACC,MAAD,EAAY;AAChBf,MAAAA,WAAW,CAACe,MAAM,CAACC,IAAR,CAAX;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACC,IAAnB;AACD,KAJH,EAKGG,KALH,CAKS,UAACC,KAAD,EAAW;AAChBH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD,KAPH;AAQD,GATQ,EASN,EATM,CAAT;;AAUA,MAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;AACjC,QAAIpB,OAAO,CAACqB,KAAR,CAAc,cAAd,CAAJ,EAAmC;AACjC,UAAIC,cAAc,GAAGtB,OAAO,CAACuB,IAAR,EAArB;AACA9B,MAAAA,WAAW,CAACI,SAAD,EAAYK,KAAK,CAACQ,MAAN,CAAaC,QAAzB,EAAmCW,cAAnC,CAAX,CACGT,IADH,CACQ,UAACW,QAAD,EAAc;AAClBR,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BO,QAA/B;AACD,OAHH,EAIGN,KAJH,CAIS,UAACO,GAAD,EAAS;AACdT,QAAAA,OAAO,CAACC,GAAR,CAAYQ,GAAZ;AACD,OANH;AAOD;AACF,GAXD;;AAYA,SACE,MAAC,YAAD;AAAc,IAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAArB;AAAA,eACE,KAAC,SAAD;AACE,MAAA,GAAG,EAAEvB,MADP;AAEE,MAAA,MAAM,EAAKD,KAAK,CAACQ,MAAN,CAAaiB,SAAlB,SAA+BzB,KAAK,CAACQ,MAAN,CAAakB;AAFpD,MADF,EAME,KAAC,oBAAD;AACE,MAAA,QAAQ,EAAEC,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAwB,SAAxB,GAAoC,QADhD;AAEE,MAAA,KAAK,EAAEC,MAAM,CAACC,SAFhB;AAAA,gBAIE,KAAC,IAAD;AACE,QAAA,KAAK,EAAE;AACLC,UAAAA,YAAY,EAAE,EADT;AAELP,UAAAA,IAAI,EAAE;AAFD,SADT;AAAA,kBAME,KAAC,wBAAD;AAA0B,UAAA,OAAO,EAAEQ,QAAQ,CAACC,OAA5C;AAAA,oBACE,MAAC,IAAD;AAAM,YAAA,KAAK,EAAEJ,MAAM,CAACK,KAApB;AAAA,uBACE,KAAC,IAAD;AACE,cAAA,KAAK,EAAE;AACLV,gBAAAA,IAAI,EAAE;AADD,eADT;AAAA,wBAKGtB,cAAc;AALjB,cADF,EAQE,MAAC,IAAD;AACE,cAAA,KAAK,EAAE;AACLiC,gBAAAA,SAAS,EAAE,EADN;AAELC,gBAAAA,aAAa,EAAE,KAFV;AAGLC,gBAAAA,UAAU,EAAE,QAHP;AAILC,gBAAAA,WAAW,EAAE,CAJR;AAKLC,gBAAAA,WAAW,EAAE,SALR;AAMLC,gBAAAA,YAAY,EAAE,EANT;AAOLC,gBAAAA,WAAW,EAAE,EAPR;AAQLC,gBAAAA,YAAY,EAAE;AART,eADT;AAAA,yBAYE,KAAC,IAAD;AAAM,gBAAA,KAAK,EAAE;AAAElB,kBAAAA,IAAI,EAAE;AAAR,iBAAb;AAAA,0BACE,KAAC,SAAD;AACE,kBAAA,KAAK,EAAE1B,OADT;AAEE,kBAAA,KAAK,EAAE+B,MAAM,CAACc,KAFhB;AAGE,kBAAA,WAAW,EAAC,qBAHd;AAIE,kBAAA,YAAY,EAAE,sBAACC,CAAD,EAAO;AACnB7C,oBAAAA,UAAU,CAAC6C,CAAD,CAAV;AACD;AANH;AADF,gBAZF,EAuBE,KAAC,IAAD;AAAM,gBAAA,KAAK,EAAE;AAAEpB,kBAAAA,IAAI,EAAE;AAAR,iBAAb;AAAA,0BACE,KAAC,MAAD;AAAQ,kBAAA,KAAK,EAAC,MAAd;AAAqB,kBAAA,OAAO,EAAEN;AAA9B;AADF,gBAvBF;AAAA,cARF;AAAA;AADF;AANF;AAJF,MANF;AAAA,IADF;AA2DD;AAED,IAAMW,MAAM,GAAGgB,UAAU,CAACC,MAAX,CAAkB;AAC/BhB,EAAAA,SAAS,EAAE;AACTN,IAAAA,IAAI,EAAE;AADG,GADoB;AAI/BU,EAAAA,KAAK,EAAE;AACLa,IAAAA,UAAU,EAAE,EADP;AAEL3C,IAAAA,WAAW,EAAE,EAFR;AAGL4C,IAAAA,OAAO,EAAE,EAHJ;AAILxB,IAAAA,IAAI,EAAE,CAJD;AAKLyB,IAAAA,cAAc,EAAE;AALX,GAJwB;AAW/BN,EAAAA,KAAK,EAAE;AACLO,IAAAA,MAAM,EAAE,EADH;AAEL7C,IAAAA,KAAK,EAAE,KAFF;AAGL2C,IAAAA,OAAO,EAAE;AAHJ,GAXwB;AAgB/BG,EAAAA,YAAY,EAAE;AACZC,IAAAA,eAAe,EAAE,OADL;AAEZjB,IAAAA,SAAS,EAAE;AAFC;AAhBiB,CAAlB,CAAf","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport {\n  Text,\n  View,\n  StatusBar,\n  TextInput,\n  Button,\n  StyleSheet,\n  SafeAreaView,\n  KeyboardAvoidingView,\n  Platform,\n  TouchableWithoutFeedback,\n  Keyboard,\n  FlatList,\n} from \"react-native\";\nimport AppHeader from \"../components/Header\";\nimport { useRoute } from \"@react-navigation/native\";\nimport { UserContext } from \"../Context\";\nimport { getChatMessages, sendMessage } from \"../api\";\nimport Bubble from \"../components/Bubble\";\n\nexport default function MessageScreen({ navigation }: { navigation: any }) {\n  const authToken = useContext(UserContext);\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const route = useRoute();\n\n  const goBack = () => {\n    navigation.goBack();\n  };\n\n  const FlatListBasics = () => {\n    return (\n      <View>\n        <FlatList\n          scrollEnabled\n          data={messages}\n          renderItem={({ item }) => (\n            <View\n              style={{\n                marginRight: 5,\n                width: \"75%\",\n                alignSelf:\n                  item.userId === route.params.friendId\n                    ? \"flex-start\"\n                    : \"flex-end\",\n              }}\n            >\n              <Bubble\n                text={item.text}\n                border={item.userId === route.params.friendId}\n              />\n            </View>\n          )}\n        />\n      </View>\n    );\n  };\n\n  useEffect(() => {\n    getChatMessages(authToken, route.params.friendId, 0)\n      .then((result) => {\n        setMessages(result.data);\n        console.log(result.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n  const handleSendingMessage = () => {\n    if (message.match(/(?!^ +$)^.+$/)) {\n      let trimmedMessage = message.trim();\n      sendMessage(authToken, route.params.friendId, trimmedMessage)\n        .then((response) => {\n          console.log(\"testing chating\", response);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n  return (\n    <SafeAreaView style={{ flex: 1 }}>\n      <AppHeader\n        ret={goBack}\n        header={`${route.params.firstName} ${route.params.lastName}`}\n      />\n\n      <KeyboardAvoidingView\n        behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\n        style={styles.container}\n      >\n        <View\n          style={{\n            marginBottom: 10,\n            flex: 1,\n          }}\n        >\n          <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\n            <View style={styles.inner}>\n              <View\n                style={{\n                  flex: 1,\n                }}\n              >\n                {FlatListBasics()}\n              </View>\n              <View\n                style={{\n                  marginTop: 10,\n                  flexDirection: \"row\",\n                  alignItems: \"center\",\n                  borderWidth: 1,\n                  borderColor: \"#DDDDDD\",\n                  borderRadius: 40,\n                  paddingLeft: 15,\n                  paddingRight: 15,\n                }}\n              >\n                <View style={{ flex: 2.25 }}>\n                  <TextInput\n                    value={message}\n                    style={styles.input}\n                    placeholder=\"useless placeholder\"\n                    onChangeText={(e) => {\n                      setMessage(e);\n                    }}\n                  />\n                </View>\n\n                <View style={{ flex: 0.75 }}>\n                  <Button title=\"send\" onPress={handleSendingMessage} />\n                </View>\n              </View>\n            </View>\n          </TouchableWithoutFeedback>\n        </View>\n      </KeyboardAvoidingView>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  inner: {\n    marginLeft: 10,\n    marginRight: 10,\n    padding: 10,\n    flex: 1,\n    justifyContent: \"flex-end\",\n  },\n  input: {\n    height: 30,\n    width: \"80%\",\n    padding: 10,\n  },\n  btnContainer: {\n    backgroundColor: \"white\",\n    marginTop: 12,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}