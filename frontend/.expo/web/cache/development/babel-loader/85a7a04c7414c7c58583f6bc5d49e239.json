{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport { searchUser, addFriend } from \"../api\";\nimport { SearchBar } from \"react-native-elements\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function FriendScreen(_ref) {\n  var navigation = _ref.navigation,\n      friends = _ref.friends;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      search = _useState2[0],\n      setSearch = _useState2[1];\n\n  var _useState3 = useState(friends),\n      _useState4 = _slicedToArray(_useState3, 2),\n      friendsList = _useState4[0],\n      setFriendsList = _useState4[1];\n\n  var _useState5 = useState(friends),\n      _useState6 = _slicedToArray(_useState5, 2),\n      searches = _useState6[0],\n      setSearches = _useState6[1];\n\n  var map = new Map();\n  friends.forEach(function (element) {\n    map.set(element.id, element);\n  });\n\n  var handleAddFriend = function handleAddFriend(data) {\n    addFriend(data.id);\n    setFriendsList(function (friendsList, data) {\n      var newList = [].concat(_toConsumableArray(friendsList), [data]);\n      return newList;\n    });\n    map.set(data.id, data);\n  };\n\n  var handleOpenMessage = function handleOpenMessage(id, firstName, lastName) {\n    console.log(\"testing\", id);\n    navigation.navigate(\"message\", {\n      friendId: id,\n      firstName: firstName,\n      lastName: lastName\n    });\n  };\n\n  var updateSearch = function updateSearch(input) {\n    console.log(\"input\", input === \"\");\n    setSearch(input);\n\n    if (input !== \"\") {\n      searchUser(input).then(function (response) {\n        setSearches(response.data);\n      }).catch(function (error) {\n        console.log(\"error\", error);\n      });\n    } else {\n      setSearches(friends);\n    }\n  };\n\n  useEffect(function () {}, [friendsList]);\n\n  var it = function it(data) {\n    return _jsx(TouchableHighlight, {\n      activeOpacity: 0.6,\n      underlayColor: \"#DDDDDD\",\n      onPress: function onPress() {\n        return handleOpenMessage(data.id, data.firstName, data.lastName);\n      },\n      children: _jsx(View, {\n        style: styles.container,\n        children: _jsxs(View, {\n          style: styles.flexContainer,\n          children: [_jsxs(View, {\n            children: [_jsx(Text, {\n              style: styles.mainText,\n              children: data.firstName + \" \" + data.lastName\n            }), _jsx(Text, {\n              children: data.email\n            })]\n          }), _jsx(View, {\n            children: map.has(data.id) ? _jsx(View, {}) : _jsx(Button, {\n              title: \"Add\",\n              onPress: function onPress() {\n                handleAddFriend(data);\n              }\n            })\n          })]\n        })\n      })\n    });\n  };\n\n  var FlatListBasics = function FlatListBasics() {\n    return _jsx(View, {\n      style: styles.listContainer,\n      children: _jsx(FlatList, {\n        data: search === \"\" ? friendsList : searches,\n        renderItem: function renderItem(_ref2) {\n          var item = _ref2.item;\n          return it(item);\n        }\n      })\n    });\n  };\n\n  return _jsxs(View, {\n    children: [_jsx(SearchBar, {\n      placeholder: \"Type Here...\",\n      platform: \"ios\",\n      lightTheme: true,\n      round: true,\n      onChangeText: updateSearch,\n      value: search\n    }), _jsx(View, {\n      style: styles.listContainer,\n      children: FlatListBasics()\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    padding: 5,\n    borderBottomWidth: 1,\n    borderColor: \"#FAF9F9\"\n  },\n  flexContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    padding: 5\n  },\n  mainText: {\n    fontSize: 18\n  },\n  secondaryText: {\n    fontWeight: \"400\"\n  },\n  item: {\n    padding: 10,\n    fontSize: 18,\n    height: 44\n  }\n});","map":{"version":3,"sources":["/Users/mutabazi3/Projects/cis400/frontend/screens/FriendsScreen.tsx"],"names":["React","useEffect","useState","searchUser","addFriend","SearchBar","FriendScreen","navigation","friends","search","setSearch","friendsList","setFriendsList","searches","setSearches","map","Map","forEach","element","set","id","handleAddFriend","data","newList","handleOpenMessage","firstName","lastName","console","log","navigate","friendId","updateSearch","input","then","response","catch","error","it","styles","container","flexContainer","mainText","email","has","FlatListBasics","listContainer","item","StyleSheet","create","padding","borderBottomWidth","borderColor","flexDirection","justifyContent","fontSize","secondaryText","fontWeight","height"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  Button,\n  Text,\n  View,\n  StyleSheet,\n  FlatList,\n  TouchableHighlight,\n} from \"react-native\";\nimport { searchUser, addFriend, getFriends } from \"../api\";\nimport { Feather } from \"@expo/vector-icons\";\nimport { SearchBar } from \"react-native-elements\";\nimport * as SecureStore from \"expo-secure-store\";\n\nexport default function FriendScreen({ navigation, friends }) {\n  const [search, setSearch] = useState(\"\");\n  const [friendsList, setFriendsList] = useState(friends);\n  const [searches, setSearches] = useState(friends);\n  // Map for id and friend. Used for removing and adding new friends\n  const map = new Map();\n\n  friends.forEach((element) => {\n    map.set(element.id, element);\n  });\n  //adding a new friend\n  const handleAddFriend = (data: object) => {\n    addFriend(data.id);\n\n    setFriendsList((friendsList, data) => {\n      let newList = [...friendsList, data];\n      return newList;\n    });\n    // Add the new friend in the map\n    map.set(data.id, data);\n  };\n\n  const handleOpenMessage = (\n    id: string,\n    firstName: string,\n    lastName: string\n  ) => {\n    console.log(\"testing\", id);\n    navigation.navigate(\"message\", {\n      friendId: id,\n      firstName: firstName,\n      lastName: lastName,\n    });\n  };\n  const updateSearch = (input: string) => {\n    console.log(\"input\", input === \"\");\n    setSearch(input);\n    if (input !== \"\") {\n      searchUser(input)\n        .then((response) => {\n          setSearches(response.data);\n        })\n        .catch((error) => {\n          console.log(\"error\", error);\n        });\n    } else {\n      setSearches(friends);\n    }\n  };\n  useEffect(() => {}, [friendsList]);\n  const it = (data: Object) => {\n    return (\n      <TouchableHighlight\n        activeOpacity={0.6}\n        underlayColor=\"#DDDDDD\"\n        onPress={() =>\n          handleOpenMessage(data.id, data.firstName, data.lastName)\n        }\n      >\n        <View style={styles.container}>\n          <View style={styles.flexContainer}>\n            <View>\n              <Text\n                style={styles.mainText}\n              >{`${data.firstName} ${data.lastName}`}</Text>\n              <Text>{data.email}</Text>\n            </View>\n            <View>\n              {map.has(data.id) ? (\n                <View />\n              ) : (\n                <Button\n                  title=\"Add\"\n                  onPress={() => {\n                    handleAddFriend(data);\n                  }}\n                />\n              )}\n            </View>\n          </View>\n        </View>\n      </TouchableHighlight>\n    );\n  };\n  const FlatListBasics = () => {\n    return (\n      <View style={styles.listContainer}>\n        <FlatList\n          data={search === \"\" ? friendsList : searches}\n          renderItem={({ item }) => it(item)}\n        />\n      </View>\n    );\n  };\n\n  return (\n    <View>\n      <SearchBar\n        placeholder=\"Type Here...\"\n        platform=\"ios\"\n        lightTheme\n        round\n        onChangeText={updateSearch}\n        value={search}\n      />\n      <View style={styles.listContainer}>{FlatListBasics()}</View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 5,\n    borderBottomWidth: 1,\n    borderColor: \"#FAF9F9\",\n  },\n\n  flexContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    padding: 5,\n  },\n\n  mainText: {\n    fontSize: 18,\n  },\n  secondaryText: {\n    fontWeight: \"400\",\n  },\n  item: {\n    padding: 10,\n    fontSize: 18,\n    height: 44,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}