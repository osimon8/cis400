{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport AppHeader from \"../components/Header\";\nimport { useRoute } from \"@react-navigation/native\";\nimport { UserContext } from \"../Context\";\nimport { getChatMessages, sendMessage } from \"../api\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function MessageScreen(_ref) {\n  var navigation = _ref.navigation;\n  var authToken = useContext(UserContext);\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      messages = _useState2[0],\n      setMessages = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      message = _useState4[0],\n      setMessage = _useState4[1];\n\n  var route = useRoute();\n\n  var goBack = function goBack() {\n    navigation.goBack();\n  };\n\n  var FlatListBasics = function FlatListBasics() {\n    return _jsx(View, {\n      children: _jsx(FlatList, {\n        data: messages,\n        renderItem: function renderItem(_ref2) {\n          var item = _ref2.item;\n          return _jsx(View, {\n            style: {\n              backgroundColor: \"#8dc673\",\n              padding: 10,\n              margin: 5,\n              borderRadius: 5\n            },\n            children: _jsx(Text, {\n              style: {\n                backgroundColor: \"red\",\n                width: \"10%\"\n              },\n              children: item.text\n            })\n          });\n        }\n      })\n    });\n  };\n\n  useEffect(function () {\n    getChatMessages(authToken, route.params.friendId).then(function (result) {\n      setMessages(result.data);\n      console.log(result.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }, []);\n\n  var handleSendingMessage = function handleSendingMessage() {\n    if (message.match(/(?!^ +$)^.+$/)) {\n      var trimmedMessage = message.trim();\n      sendMessage(authToken, route.params.friendId, trimmedMessage).then(function (response) {\n        console.log(\"testing chating\", response);\n      }).catch(function (err) {\n        console.log(err);\n      });\n    }\n  };\n\n  return _jsxs(KeyboardAvoidingView, {\n    behavior: Platform.OS === \"ios\" ? \"padding\" : \"height\",\n    style: styles.container,\n    children: [_jsx(AppHeader, {\n      ret: goBack,\n      header: route.params.firstName + \" \" + route.params.lastName\n    }), _jsx(TouchableWithoutFeedback, {\n      onPress: Keyboard.dismiss,\n      children: _jsxs(View, {\n        style: styles.inner,\n        children: [_jsx(View, {\n          children: FlatListBasics()\n        }), _jsxs(View, {\n          style: {\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            borderWidth: 1,\n            borderColor: \"#DDDDDD\",\n            borderRadius: 40,\n            paddingLeft: 15,\n            paddingRight: 15\n          },\n          children: [_jsx(View, {\n            style: {\n              flex: 2.25\n            },\n            children: _jsx(TextInput, {\n              value: message,\n              style: styles.input,\n              placeholder: \"useless placeholder\",\n              onChangeText: function onChangeText(e) {\n                setMessage(e);\n              }\n            })\n          }), _jsx(View, {\n            style: {\n              flex: 0.75\n            },\n            children: _jsx(Button, {\n              title: \"send\",\n              onPress: handleSendingMessage\n            })\n          })]\n        })]\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  inner: {\n    marginBottom: \"10%\",\n    marginLeft: 10,\n    marginRight: 10,\n    flex: 1,\n    justifyContent: \"flex-end\"\n  },\n  input: {\n    height: 30,\n    width: \"80%\",\n    padding: 10\n  },\n  btnContainer: {\n    backgroundColor: \"white\",\n    marginTop: 12\n  }\n});","map":{"version":3,"sources":["/Users/mutabazi3/Projects/cis400/frontend/screens/MessageScreen.tsx"],"names":["React","useState","useEffect","useContext","AppHeader","useRoute","UserContext","getChatMessages","sendMessage","MessageScreen","navigation","authToken","messages","setMessages","message","setMessage","route","goBack","FlatListBasics","item","backgroundColor","padding","margin","borderRadius","width","text","params","friendId","then","result","data","console","log","catch","error","handleSendingMessage","match","trimmedMessage","trim","response","err","Platform","OS","styles","container","firstName","lastName","Keyboard","dismiss","inner","flexDirection","alignItems","borderWidth","borderColor","paddingLeft","paddingRight","flex","input","e","StyleSheet","create","marginBottom","marginLeft","marginRight","justifyContent","height","btnContainer","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport {\n  Text,\n  View,\n  StatusBar,\n  TextInput,\n  Button,\n  StyleSheet,\n  SafeAreaView,\n  KeyboardAvoidingView,\n  Platform,\n  TouchableWithoutFeedback,\n  Keyboard,\n  FlatList,\n} from \"react-native\";\nimport AppHeader from \"../components/Header\";\nimport { useRoute } from \"@react-navigation/native\";\nimport { UserContext } from \"../Context\";\nimport { getChatMessages, sendMessage } from \"../api\";\n\nexport default function MessageScreen({ navigation }) {\n  const authToken = useContext(UserContext);\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const route = useRoute();\n\n  const goBack = () => {\n    navigation.goBack();\n  };\n\n  const FlatListBasics = () => {\n    return (\n      <View>\n        <FlatList\n          data={messages}\n          renderItem={({ item }) => (\n            <View\n              style={{\n                backgroundColor: \"#8dc673\",\n                padding: 10,\n                margin: 5,\n                borderRadius: 5,\n                // flex: 1,\n                // maxWidth: \"75%\",\n              }}\n            >\n              <Text\n                style={{\n                  backgroundColor: \"red\",\n                  width: \"10%\",\n                }}\n              >\n                {item.text}\n              </Text>\n            </View>\n          )}\n        />\n      </View>\n    );\n  };\n\n  useEffect(() => {\n    getChatMessages(authToken, route.params.friendId)\n      .then((result) => {\n        setMessages(result.data);\n        console.log(result.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n  const handleSendingMessage = () => {\n    if (message.match(/(?!^ +$)^.+$/)) {\n      let trimmedMessage = message.trim();\n      sendMessage(authToken, route.params.friendId, trimmedMessage)\n        .then((response) => {\n          console.log(\"testing chating\", response);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n  return (\n    <KeyboardAvoidingView\n      behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\n      style={styles.container}\n    >\n      <AppHeader\n        ret={goBack}\n        header={`${route.params.firstName} ${route.params.lastName}`}\n      ></AppHeader>\n      <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\n        <View style={styles.inner}>\n          <View>{FlatListBasics()}</View>\n          <View\n            style={{\n              flexDirection: \"row\",\n              alignItems: \"center\",\n              borderWidth: 1,\n              borderColor: \"#DDDDDD\",\n              borderRadius: 40,\n              paddingLeft: 15,\n              paddingRight: 15,\n            }}\n          >\n            <View style={{ flex: 2.25 }}>\n              <TextInput\n                value={message}\n                style={styles.input}\n                placeholder=\"useless placeholder\"\n                onChangeText={(e) => {\n                  setMessage(e);\n                }}\n              />\n            </View>\n\n            <View style={{ flex: 0.75 }}>\n              <Button title=\"send\" onPress={handleSendingMessage} />\n            </View>\n          </View>\n        </View>\n      </TouchableWithoutFeedback>\n    </KeyboardAvoidingView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  inner: {\n    marginBottom: \"10%\",\n    marginLeft: 10,\n    marginRight: 10,\n    flex: 1,\n    justifyContent: \"flex-end\",\n  },\n  input: {\n    height: 30,\n    width: \"80%\",\n    padding: 10,\n  },\n  btnContainer: {\n    backgroundColor: \"white\",\n    marginTop: 12,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}