{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { sendMessage } from \"../api\";\nimport { UserContext } from \"../Context\";\nimport { FriendItemList } from \"../components/FriendItemList\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function LocationScreen(_ref) {\n  var navigation = _ref.navigation,\n      retrievedFriends = _ref.retrievedFriends;\n  var authToken = useContext(UserContext);\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      location = _useState2[0],\n      setLocation = _useState2[1];\n\n  var _useState3 = useState(1.9441),\n      _useState4 = _slicedToArray(_useState3, 2),\n      latitude = _useState4[0],\n      setLatitude = _useState4[1];\n\n  var _useState5 = useState(retrievedFriends),\n      _useState6 = _slicedToArray(_useState5, 2),\n      friends = _useState6[0],\n      setFriends = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      clickedFriend = _useState8[0],\n      setClickedFriend = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      clickedFriendId = _useState10[0],\n      setClickedFriendId = _useState10[1];\n\n  var _useState11 = useState(30.0619),\n      _useState12 = _slicedToArray(_useState11, 2),\n      longitude = _useState12[0],\n      setLongitude = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      modalVisible = _useState14[0],\n      setModalVisible = _useState14[1];\n\n  var _useState15 = useState(null),\n      _useState16 = _slicedToArray(_useState15, 2),\n      errorMsg = _useState16[0],\n      setErrorMsg = _useState16[1];\n\n  var _useState17 = useState(false),\n      _useState18 = _slicedToArray(_useState17, 2),\n      isEnabled = _useState18[0],\n      setIsEnabled = _useState18[1];\n\n  var _useState19 = useState(\"\"),\n      _useState20 = _slicedToArray(_useState19, 2),\n      message = _useState20[0],\n      setMessage = _useState20[1];\n\n  var toggleSwitch = function toggleSwitch() {\n    return setIsEnabled(function (previousState) {\n      return !previousState;\n    });\n  };\n\n  var handleOpen = function handleOpen(id, firstName, lastName) {\n    setClickedFriend(firstName + \" \" + lastName);\n    setClickedFriendId(id);\n    setModalVisible(true);\n  };\n\n  console.log(\"retreived\", {\n    friends: friends,\n    retrievedFriends: retrievedFriends\n  });\n  useEffect(function () {\n    setFriends(retrievedFriends);\n  }, []);\n  var text = \"Waiting..\";\n\n  if (errorMsg) {\n    text = errorMsg;\n  } else if (location) {}\n\n  var FlatListBasics = function FlatListBasics(distance) {\n    return _jsx(View, {\n      children: _jsx(FlatList, {\n        data: friends ? friends[\"\" + distance] : [],\n        renderItem: function renderItem(_ref2) {\n          var item = _ref2.item;\n          return _jsx(FriendItemList, {\n            data: item,\n            handleOpen: handleOpen\n          });\n        }\n      })\n    });\n  };\n\n  var handleSendingMessage = function handleSendingMessage() {\n    if (message.match(/(?!^ +$)^.+$/)) {\n      var trimmedMessage = message.trim();\n      sendMessage(authToken, clickedFriendId, trimmedMessage).then(function (response) {\n        console.log(\"testing chating\", response);\n      }).catch(function (err) {\n        console.log(err);\n      });\n      setModalVisible(!modalVisible);\n      setMessage(\"\");\n      navigation.navigate(\"message\", {\n        friendId: clickedFriendId,\n        firstName: clickedFriend.split(\" \")[0],\n        lastName: clickedFriend.split(\" \")[1]\n      });\n    }\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [friends && friends[\"1\"].length > 0 ? _jsxs(View, {\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"1 mile away\"\n      }), FlatListBasics(1)]\n    }) : _jsx(View, {}), friends && friends[\"2\"].length > 0 ? _jsxs(View, {\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"2 mile away\"\n      }), FlatListBasics(2)]\n    }) : _jsx(View, {}), friends && friends[\"3\"].length > 0 ? _jsxs(View, {\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"3 mile away\"\n      }), FlatListBasics(3)]\n    }) : _jsx(View, {}), _jsx(Modal, {\n      animationType: \"fade\",\n      transparent: true,\n      visible: modalVisible,\n      onRequestClose: function onRequestClose() {\n        Alert.alert(\"Modal has been closed.\");\n        setModalVisible(!modalVisible);\n      },\n      children: _jsx(View, {\n        style: styles.centeredView,\n        children: _jsxs(View, {\n          style: styles.modalView,\n          children: [_jsx(View, {\n            style: {\n              width: \"100%\",\n              backgroundColor: \"blue\",\n              marginBottom: 30\n            },\n            children: _jsx(View, {\n              style: {\n                position: \"absolute\",\n                right: 0\n              },\n              children: _jsx(Button, {\n                title: \"Close\",\n                onPress: function onPress() {\n                  setMessage(\"\");\n                  setModalVisible(!modalVisible);\n                }\n              })\n            })\n          }), _jsx(Image, {\n            style: styles.imageModal,\n            source: {\n              uri: \"https://images-na.ssl-images-amazon.com/images/I/81nKBuQzyjL.jpg\"\n            }\n          }), _jsx(Text, {\n            style: {\n              fontSize: 28\n            },\n            children: clickedFriend\n          }), _jsx(Text, {\n            children: \"Quick Texts\"\n          }), _jsxs(View, {\n            style: {\n              width: \"80%\",\n              marginTop: 10\n            },\n            children: [_jsx(TouchableOpacity, {\n              style: {\n                flexDirection: \"column\"\n              },\n              onPress: function onPress() {\n                setMessage(\"Wanna get some lunch?\");\n              },\n              children: _jsx(View, {\n                style: styles.button,\n                children: _jsx(Text, {\n                  children: \"Wanna get some lunch?\"\n                })\n              })\n            }), _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                setMessage(\"What are you up to?\");\n              },\n              children: _jsx(View, {\n                style: styles.button,\n                children: _jsx(Text, {\n                  children: \"What are you up to?\"\n                })\n              })\n            }), _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                setMessage(\"Wanna grab a drink?\");\n              },\n              children: _jsx(View, {\n                style: styles.button,\n                children: _jsx(Text, {\n                  children: \"Wanna grab a drink?\"\n                })\n              })\n            })]\n          }), _jsxs(View, {\n            style: {\n              flexDirection: \"row\",\n              alignItems: \"center\",\n              borderWidth: 1,\n              borderColor: \"#DDDDDD\",\n              borderRadius: 40,\n              paddingLeft: 15,\n              paddingRight: 15,\n              width: \"80%\"\n            },\n            children: [_jsx(View, {\n              style: {\n                flex: 2.25\n              },\n              children: _jsx(TextInput, {\n                value: message,\n                style: styles.input,\n                placeholder: \"useless placeholder\",\n                onChangeText: function onChangeText(e) {\n                  setMessage(e);\n                }\n              })\n            }), _jsx(View, {\n              style: {\n                flex: 0.75\n              },\n              children: _jsx(Button, {\n                title: \"send\",\n                onPress: handleSendingMessage\n              })\n            })]\n          })]\n        })\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  map: {\n    width: \"100%\",\n    height: \"100%\",\n    zIndex: 1\n  },\n  imageModal: {\n    width: 100,\n    height: 100,\n    borderRadius: 50,\n    marginBottom: 5\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 10,\n    padding: 5,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5,\n    height: \"60%\",\n    width: \"80%\"\n  },\n  button: {\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2,\n    backgroundColor: \"#DDDDDD\",\n    marginBottom: 10\n  },\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22\n  },\n  buttonClose: {\n    backgroundColor: \"#2196F3\"\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\"\n  },\n  input: {\n    height: 30,\n    width: \"80%\",\n    padding: 10\n  },\n  title: {\n    backgroundColor: \"white\",\n    textAlign: \"center\",\n    fontSize: 15,\n    fontWeight: \"bold\",\n    padding: 5\n  }\n});","map":{"version":3,"sources":["/Users/mutabazi3/Projects/cis400/frontend/screens/LocationScreen.tsx"],"names":["React","useState","useEffect","useContext","sendMessage","UserContext","FriendItemList","LocationScreen","navigation","retrievedFriends","authToken","location","setLocation","latitude","setLatitude","friends","setFriends","clickedFriend","setClickedFriend","clickedFriendId","setClickedFriendId","longitude","setLongitude","modalVisible","setModalVisible","errorMsg","setErrorMsg","isEnabled","setIsEnabled","message","setMessage","toggleSwitch","previousState","handleOpen","id","firstName","lastName","console","log","text","FlatListBasics","distance","item","handleSendingMessage","match","trimmedMessage","trim","then","response","catch","err","navigate","friendId","split","styles","container","length","title","Alert","alert","centeredView","modalView","width","backgroundColor","marginBottom","position","right","imageModal","uri","fontSize","marginTop","flexDirection","button","alignItems","borderWidth","borderColor","borderRadius","paddingLeft","paddingRight","flex","input","e","StyleSheet","create","map","height","zIndex","margin","padding","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","justifyContent","buttonClose","textStyle","color","fontWeight","textAlign","modalText"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport {\n  Text,\n  View,\n  StyleSheet,\n  Switch,\n  Alert,\n  Modal,\n  TouchableOpacity,\n  Image,\n  Button,\n  TextInput,\n  Pressable,\n  FlatList,\n  SectionList,\n} from \"react-native\";\nimport * as Location from \"expo-location\";\nimport { getNearbyFriends, sendMessage, setUserLocation } from \"../api\";\nimport { UserContext } from \"../Context\";\nimport { FriendItemList } from \"../components/FriendItemList\";\n\nexport default function LocationScreen({\n  navigation,\n  retrievedFriends,\n}: {\n  navigation: any;\n}) {\n  const authToken = useContext(UserContext);\n  const [location, setLocation] = useState(null);\n  const [latitude, setLatitude] = useState(1.9441);\n  const [friends, setFriends] = useState(retrievedFriends);\n  const [clickedFriend, setClickedFriend] = useState(\"\");\n  const [clickedFriendId, setClickedFriendId] = useState(\"\");\n  const [longitude, setLongitude] = useState(30.0619);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [errorMsg, setErrorMsg] = useState(null);\n  const [isEnabled, setIsEnabled] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const toggleSwitch = () => setIsEnabled((previousState) => !previousState);\n  //retrieves the users location\n\n  const handleOpen = (id: string, firstName: string, lastName: string) => {\n    setClickedFriend(`${firstName} ${lastName}`);\n    setClickedFriendId(id);\n    setModalVisible(true);\n  };\n  console.log(\"retreived\", { friends, retrievedFriends });\n  useEffect(() => {\n    setFriends(retrievedFriends);\n  }, []);\n\n  let text = \"Waiting..\";\n  if (errorMsg) {\n    text = errorMsg;\n  } else if (location) {\n  }\n  const FlatListBasics = (distance: Number) => {\n    return (\n      <View>\n        <FlatList\n          data={friends ? friends[`${distance}`] : []}\n          renderItem={({ item }) => (\n            <FriendItemList data={item} handleOpen={handleOpen} />\n          )}\n        />\n      </View>\n    );\n  };\n\n  const handleSendingMessage = () => {\n    if (message.match(/(?!^ +$)^.+$/)) {\n      let trimmedMessage = message.trim();\n      sendMessage(authToken, clickedFriendId, trimmedMessage)\n        .then((response) => {\n          console.log(\"testing chating\", response);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n      setModalVisible(!modalVisible);\n      setMessage(\"\");\n      navigation.navigate(\"message\", {\n        friendId: clickedFriendId,\n        firstName: clickedFriend.split(\" \")[0],\n        lastName: clickedFriend.split(\" \")[1],\n      });\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      {/* <View\n        style={{\n          backgroundColor: \"white\",\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <View\n          style={{\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            marginLeft: 10,\n            marginRight: 10,\n          }}\n        >\n          <Text style={{ padding: 2 }}>{\"Availability\"}</Text>\n          <Switch\n            // style={{ position: \"absolute\", top: 0, right: 0, margin: 5 }}\n            trackColor={{ false: \"#ffffff\", true: \"#ffffff\" }}\n            thumbColor={isEnabled ? \"#157106\" : \"#FF0000\"}\n            ios_backgroundColor=\"#fffff\"\n            onValueChange={toggleSwitch}\n            value={isEnabled}\n          />\n        </View>\n        <View\n          style={{\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <Text style={{ padding: 2 }}>{\"Availability\"}</Text>\n          <Switch\n            // style={{ position: \"absolute\", top: 0, right: 0, margin: 5 }}\n            trackColor={{ false: \"#ffffff\", true: \"#ffffff\" }}\n            thumbColor={isEnabled ? \"#157106\" : \"#FF0000\"}\n            ios_backgroundColor=\"#fffff\"\n            onValueChange={toggleSwitch}\n            value={isEnabled}\n          />\n        </View>\n      </View> */}\n\n      {friends && friends[\"1\"].length > 0 ? (\n        <View>\n          <Text style={styles.title}>1 mile away</Text>\n          {FlatListBasics(1)}\n        </View>\n      ) : (\n        <View />\n      )}\n      {friends && friends[\"2\"].length > 0 ? (\n        <View>\n          <Text style={styles.title}>2 mile away</Text>\n          {FlatListBasics(2)}\n        </View>\n      ) : (\n        <View />\n      )}\n      {friends && friends[\"3\"].length > 0 ? (\n        <View>\n          <Text style={styles.title}>3 mile away</Text>\n          {FlatListBasics(3)}\n        </View>\n      ) : (\n        <View />\n      )}\n\n      <Modal\n        animationType=\"fade\"\n        transparent={true}\n        visible={modalVisible}\n        onRequestClose={() => {\n          Alert.alert(\"Modal has been closed.\");\n          setModalVisible(!modalVisible);\n        }}\n      >\n        <View style={styles.centeredView}>\n          <View style={styles.modalView}>\n            <View\n              style={{\n                width: \"100%\",\n                backgroundColor: \"blue\",\n                marginBottom: 30,\n              }}\n            >\n              <View\n                style={{\n                  position: \"absolute\",\n                  right: 0,\n                }}\n              >\n                <Button\n                  title=\"Close\"\n                  onPress={() => {\n                    //clear the message in the modal\n                    setMessage(\"\");\n                    setModalVisible(!modalVisible);\n                  }}\n                ></Button>\n              </View>\n            </View>\n\n            <Image\n              style={styles.imageModal}\n              source={{\n                uri: \"https://images-na.ssl-images-amazon.com/images/I/81nKBuQzyjL.jpg\",\n              }}\n            />\n            <Text style={{ fontSize: 28 }}>{clickedFriend}</Text>\n            <Text>Quick Texts</Text>\n            <View style={{ width: \"80%\", marginTop: 10 }}>\n              <TouchableOpacity\n                style={{ flexDirection: \"column\" }}\n                onPress={() => {\n                  setMessage(\"Wanna get some lunch?\");\n                }}\n              >\n                <View style={styles.button}>\n                  <Text>Wanna get some lunch?</Text>\n                </View>\n              </TouchableOpacity>\n              <TouchableOpacity\n                onPress={() => {\n                  setMessage(\"What are you up to?\");\n                }}\n              >\n                <View style={styles.button}>\n                  <Text>What are you up to?</Text>\n                </View>\n              </TouchableOpacity>\n              <TouchableOpacity\n                onPress={() => {\n                  setMessage(\"Wanna grab a drink?\");\n                }}\n              >\n                <View style={styles.button}>\n                  <Text>Wanna grab a drink?</Text>\n                </View>\n              </TouchableOpacity>\n            </View>\n\n            <View\n              style={{\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                borderWidth: 1,\n                borderColor: \"#DDDDDD\",\n                borderRadius: 40,\n                paddingLeft: 15,\n                paddingRight: 15,\n                width: \"80%\",\n              }}\n            >\n              <View style={{ flex: 2.25 }}>\n                <TextInput\n                  value={message}\n                  style={styles.input}\n                  placeholder=\"useless placeholder\"\n                  onChangeText={(e) => {\n                    setMessage(e);\n                  }}\n                />\n              </View>\n\n              <View style={{ flex: 0.75 }}>\n                <Button title=\"send\" onPress={handleSendingMessage} />\n              </View>\n            </View>\n          </View>\n        </View>\n      </Modal>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  map: {\n    width: \"100%\",\n    height: \"100%\",\n    zIndex: 1,\n  },\n  imageModal: {\n    width: 100,\n    height: 100,\n    borderRadius: 50,\n    marginBottom: 5,\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 10,\n    padding: 5,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5,\n    height: \"60%\",\n    width: \"80%\",\n  },\n  button: {\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2,\n    backgroundColor: \"#DDDDDD\",\n    marginBottom: 10,\n  },\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22,\n  },\n  buttonClose: {\n    backgroundColor: \"#2196F3\",\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\",\n  },\n  input: {\n    height: 30,\n    width: \"80%\",\n    padding: 10,\n  },\n  title: {\n    backgroundColor: \"white\",\n    textAlign: \"center\",\n    fontSize: 15,\n    fontWeight: \"bold\",\n    padding: 5,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}